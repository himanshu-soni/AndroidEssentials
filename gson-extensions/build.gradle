apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: "com.github.dcendents.android-maven"
apply plugin: "com.jfrog.bintray"


compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
}


repositories {
    mavenCentral()
}

ext {
    bintrayRepo = "maven"
    bintrayName = "AndroidEssentials-GsonExtensions"

    publishedGroupId = "me.himanshusoni.androidessentials"
    libraryName = "GsonEssentials"
    artifact = "gson-extensions"

    libraryDescription = "Gson Extensions"

    siteUrl = "https://github.com/himanshu-soni/AndroidEssentials"
    gitUrl = "https://github.com/himanshu-soni/AndroidEssentials.git"

    libraryVersion = versionName

    developerId = "himanshu-soni"
    developerName = "Himanshu Soni"
    developerEmail = "himanshusoni.me@gmail.com"

    licenseName = "The Apache Software License, Version 2.0"
    licenseUrl = "http://www.apache.org/licenses/LICENSE-2.0.txt"
    allLicenses = ["Apache-2.0"]
}


group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        pom.project {
            packaging "aar"
            groupId publishedGroupId
            artifactId artifact

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

tasks.withType(Javadoc) {
    enabled = false
}

artifacts {
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file("local.properties").newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ["archives"]
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = false
        publish = true
        override = false
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}